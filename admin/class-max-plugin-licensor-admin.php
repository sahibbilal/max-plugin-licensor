<?php/** * The admin-specific functionality of the plugin. * * @link       https://maxenius.com/ * @since      1.0 * * @package    MAX_PLUGIN_LICENSOR * @subpackage MAX_PLUGIN_LICENSOR/admin */class MAX_PLUGIN_LICENSOR_Admin {	/**	 * The ID of this plugin.     *     * @since    1.0.0     * @access   private     * @var      string    $plugin_name    The ID of this plugin.     */	private $plugin_name;	/**	 * The version of this plugin.	 *	 * @since    1.0.0	 * @access   private	 * @var      string    $version    The current version of this plugin.	 */	private $version;	/**	 * Initialize the class and set its properties.	 *	 * @since    1.0.0	 * @param      string    $plugin_name       The name of this plugin.	 * @param      string    $version    The version of this plugin.	 */	public function __construct( $plugin_name, $version ) {		$this->plugin_name  = $plugin_name;		$this->version      = $version;        add_action( 'rest_api_init', [ $this, 'max_verify_license_keys_function' ] );        add_action( 'rest_api_init', [ $this, 'max_get_plugin_metadata' ] );        add_filter( 'editable_roles', [$this, 'max_edit_user_roles'] );	}	/**	 * Register the stylesheets for the admin area.	 *	 * @since    1.0.0	 */	public function enqueue_styles() {        wp_enqueue_style( 'admin-css', plugin_dir_url( __FILE__ ) . 'css/admin.css', array(), $this->version, 'all' );	}	/**	 * Register the JavaScript for the admin area.	 *	 * @since    1.0.0	 */	public function enqueue_scripts() {		wp_enqueue_script( $this->plugin_name,   plugin_dir_url( __FILE__ ) . 'js/admin.js', array( 'jquery', 'wp-color-picker' ), $this->version, true );	}	/**	 * add new plugin file	 *	 * @since    1.0.0	 */	public function max_add_new_plugin() {        $retrieved_nonce = $_POST['_wpnonce'];        global $wpdb;        $table_name = $wpdb->prefix . "max_plugin_details";        if (wp_verify_nonce($retrieved_nonce, 'max_add_plugin_details' ) ){            $plugin_name    = $_POST['plugin_name'];            $plugin_Slug    = $_POST['plugin_Slug'];            $plugin_version = $_POST['plugin_version'];            $uploaded       = 0;            if(isset($_FILES['plugin_file']) && empty($_FILES['plugin_file']['name'])){                $file_url = $_POST['plugin_files'];                $uploaded = 0;            }            else{                $plugin_file    = $_FILES['plugin_file']["tmp_name"];                $filename       = $plugin_Slug . "-" . $plugin_version;                $extension      = pathinfo( $_FILES["plugin_file"]["name"], PATHINFO_EXTENSION );                $basename       = $filename . "." . $extension;                $destination    = dirname( __FILE__ )."/../plugin_files/{$basename}";                $file_url       = get_home_url().'/wp-content/plugins/max-plugin-licensor/admin/../plugin_files/'.$basename;                $uploaded       = 1;            }            $last_insertion = $wpdb->get_row($wpdb->prepare('SELECT * FROM ' . $table_name . ' WHERE slug = "' . $plugin_Slug . '"'));            if($_POST['insertion_type'] == 1) {                if ($last_insertion === FALSE || empty($last_insertion)) {                    if (move_uploaded_file($plugin_file, $destination)) {                        $wpdb->insert($wpdb->prefix . 'max_plugin_details', array(                            'plugin_name' => $_POST['plugin_name'],                            'slug' => $_POST['plugin_Slug'],                            'version' => $_POST['plugin_version'],                            'plugin_zip' => $file_url,                            'status' => 'active',                        ));                        $id = $wpdb->insert_id;                        if ($id) {                            update_option('max_result_notice', 'success');                            wp_redirect(get_home_url().'/wp-admin/admin.php?page=max-plugin-licensor');                        } else {                            update_option('max_result_notice', 'query');                            wp_redirect(get_home_url().'/wp-admin/admin.php?page=max-plugin-licensor');                        }                    } else {                        update_option('max_result_notice', 'file');                        wp_redirect(get_home_url().'/wp-admin/admin.php?page=max-plugin-licensor');                    }                } else {                    update_option('max_result_notice', 'slug');                    wp_redirect(get_home_url().'/wp-admin/admin.php?page=max-plugin-licensor');                }            }            if($_POST['insertion_type'] == 2) {                if ($uploaded == 1) {                    move_uploaded_file($plugin_file, $destination);                }                $wpdb->update($wpdb->prefix . 'max_plugin_details', array(                    'plugin_name' => $_POST['plugin_name'],                    'slug' => $_POST['plugin_Slug'],                    'version' => $_POST['plugin_version'],                    'plugin_zip' => $file_url,                    'status' => $_POST['plugin_status'],                ), array('id'=>$_POST['id']));                $id = $wpdb->insert_id;                update_option('max_result_notice', 'updated');                wp_redirect(get_home_url().'/wp-admin/admin.php?page=max-plugin-licensor');            }        }        else{            update_option('max_result_notice', 'nonce');            wp_redirect(get_home_url().'/wp-admin/admin.php?page=max-plugin-licensor');        }	}	/**	 * add new plugin file	 *	 * @since    1.0.0	 */	public function max_add_new_license() {        $retrieved_nonce = $_POST['_wpnonce'];        global $wpdb;        $table_name = $wpdb->prefix . "max_license_details";        if (wp_verify_nonce($retrieved_nonce, 'max_add_license_details' ) ){            $plugin_name    = $_POST['plugin_name'];            $site_name    = $_POST['site_name'];            $license_key = $_POST['license_key'];            $license_type = $_POST['license_type'];            $expiry_date = $_POST['expiry_date'];//            echo 'SELECT * FROM ' . $table_name . ' WHERE site_name = "' . $site_name . '" AND plugin_id = "' . $plugin_name . '"';            $last_insertion = $wpdb->get_row($wpdb->prepare('SELECT * FROM ' . $table_name . ' WHERE site_name = "' . $site_name . '" AND plugin_id = "' . $plugin_name . '"'));            if (($last_insertion === FALSE || $last_insertion === NULL) && $_POST['insertion_type'] == 1) {//                echo 'checkikng 123';                $wpdb->insert($table_name, array(                    'plugin_id' => $plugin_name,                    'site_name' => $site_name,                    'license_key' => $license_key,                    'license_type' => $license_type,                    'expiry_date' => $expiry_date,                    'status' => 'active',                ));                $id = $wpdb->insert_id;                if ($id) {                    update_option('max_result_notice', 'success1');                    wp_redirect(get_home_url() . '/wp-admin/admin.php?page=max-plugin-licensor&tab=licenses');                } else {                    update_option('max_result_notice', 'query');                    wp_redirect(get_home_url() . '/wp-admin/admin.php?page=max-plugin-licensor&tab=licenses');                }            }            else if (($last_insertion === NULL) || ($last_insertion !== NULL && $last_insertion->id == $_POST['id'] && $_POST['insertion_type'] == 2)) {//                echo 'checkikng 321';                $wpdb->update($table_name, array(                    'plugin_id' => $plugin_name,                    'site_name' => $site_name,                    'license_key' => $license_key,                    'license_type' => $license_type,                    'expiry_date' => $expiry_date,                    'status' => $_POST['plugin_status'],                ), array('id'=>$_POST['id']));                $id = $wpdb->insert_id;                update_option('max_result_notice', 'updated1');                wp_redirect(get_home_url().'/wp-admin/admin.php?page=max-plugin-licensor&tab=licenses');            } else {                update_option('max_result_notice', 'site');                wp_redirect(get_home_url().'/wp-admin/admin.php?page=max-plugin-licensor&tab=licenses');            }        }        else{            update_option('max_result_notice', 'nonce');            wp_redirect(get_home_url().'/wp-admin/admin.php?page=max-plugin-licensor&tab=licenses');        }	}    /**     * add / update plugin modal     *     * @since    1.0.0     */    public function max_show_plugin_details_modal(){        global $wpdb;        $type = $_POST['type1'];        $id = $_POST['id'];        $table_name     = $wpdb->prefix."max_plugin_details";        $last_insertion = $wpdb->get_row( $wpdb->prepare( 'SELECT * FROM '.$table_name.' WHERE id = "'.$id.'"' ) );        if($type == 'new'){            ?>            <form class="custom-table" action="<?php echo admin_url('admin-post.php'); ?>" method="post" enctype="multipart/form-data">                <div class="max_modal_header">                    <h3>Add Plugin</h3>                </div>                <div class="max_modal_content">                    <div class="custom-table" action="<?php echo admin_url('admin-post.php'); ?>" method="post">                        <input type="hidden" value="max_add_new_plugin" name="action">                        <input type="hidden" value="active" name="plugin_status">                        <input type="hidden" value="1" name="insertion_type">                        <input type="hidden" value="<?php echo $id; ?>" name="id">                        <?php wp_nonce_field('max_add_plugin_details'); ?>                        <table>                            <tbody>                            <tr>                                <td><strong>Plugin Name</strong></th>                                <td>                                    <input type="text" required placeholder="Name" name="plugin_name" class="max_plugin_name">                                </td>                            </tr>                            <tr>                                <td><strong>Plugin Slug</strong></td>                                <td>                                    <input type="text" required placeholder="Slug" name="plugin_Slug" class="plugin_Slug" data-type="1">                                </td>                            </tr>                            <tr>                                <td><strong>Latest Version</strong></td>                                <td>                                    <input type="text" required placeholder="Version" name="plugin_version" class="plugin_Slug" data-type="2">                                </td>                            </tr>                            <tr>                                <td><strong>Plugin Zip</strong></td>                                <td>                                    <input type="file" required name="plugin_file" class="max_check_file">                                </td>                            </tr>                            </tbody>                        </table>                    </div>                </div>                <div class="max_modal_footer">                    <input class="max_modal_submit" type="submit" value="Add" />                    <button class="max_modal_close" type="button">Close</button>                </div>            </form>            <?php        }        if($type == 'update'){            ?>            <form class="custom-table" action="<?php echo admin_url('admin-post.php'); ?>" method="post" enctype="multipart/form-data">                <div class="max_modal_header">                    <h3>Update Plugin</h3>                </div>                <div class="max_modal_content">                    <div class="custom-table" action="<?php echo admin_url('admin-post.php'); ?>" method="post">                        <input type="hidden" value="max_add_new_plugin" name="action">                        <input type="hidden" value="2" name="insertion_type">                        <input type="hidden" value="<?php echo $id; ?>" name="id">                        <?php wp_nonce_field('max_add_plugin_details'); ?>                        <table>                            <tbody>                                <tr>                                    <td><strong>Plugin Name</strong></td>                                    <td>                                        <input type="text" required value="<?php echo $last_insertion->plugin_name; ?>" name="plugin_name">                                    </td>                                </tr>                                <tr>                                    <td><strong>Plugin Slug</strong></td>                                    <td>                                        <input type="text" required value="<?php echo $last_insertion->slug; ?>" name="plugin_Slug" class="plugin_Slug" data-type="1">                                    </td>                                </tr>                                <tr>                                    <td><strong>Latest Version</strong></td>                                    <td>                                        <input type="text" required value="<?php echo $last_insertion->version; ?>" name="plugin_version" class="plugin_Slug" data-type="2">                                    </td>                                </tr>                                <tr>                                    <td><strong>Status</strong></td>                                    <td>                                        <select name="plugin_status" required>                                            <option value="active" <?php echo ($last_insertion->status == 'active') ? 'selected' : ''; ?>>Active</option>                                            <option value="in-active" <?php echo ($last_insertion->status == 'in-active') ? 'selected' : ''; ?>>Inactive</option>                                        </select>                                    </td>                                </tr>                                <tr>                                    <td><strong>Plugin Zip</strong></td>                                    <td>                                        <input type="file" required name="plugin_file" class="max_check_file">                                        <input type="hidden" name="plugin_files" value="<?php echo $last_insertion->plugin_zip; ?>">                                    </td>                                </tr>                            </tbody>                        </table>                    </div>                </div>                <div class="max_modal_footer">                    <input class="max_modal_submit" type="submit" value="Update" />                    <button class="max_modal_close" type="button">Close</button>                </div>            </form>            <?php        }        die();    }    /**     * add / update plugin modal     *     */    public function max_show_license_details_modal(){        global $wpdb;        $type = $_POST['type1'];        $id = $_POST['id'];        $table_name     = $wpdb->prefix."max_license_details";        $last_insertion = $wpdb->get_row( $wpdb->prepare( 'SELECT * FROM '.$table_name ) );        $table_name     = $wpdb->prefix."max_plugin_details";        $last_insertion = $wpdb->get_row( $wpdb->prepare( 'SELECT * FROM '.$table_name) );        $all_plugins    = $wpdb->get_results ( "SELECT * FROM $table_name ");        if($type == 'new'){            ?>            <form class="custom-table" action="<?php echo admin_url('admin-post.php'); ?>" method="post" enctype="multipart/form-data">                <div class="max_modal_header">                    <h3>Add License</h3>                </div>                <div class="max_modal_content">                    <div class="custom-table" action="<?php echo admin_url('admin-post.php'); ?>" method="post">                        <input type="hidden" value="max_add_new_license" name="action">                        <input type="hidden" value="active" name="plugin_status">                        <input type="hidden" value="1" name="insertion_type">                        <input type="hidden" value="<?php echo $id; ?>" name="id">                        <?php wp_nonce_field('max_add_license_details'); ?>                        <table>                            <tbody>                                <tr>                                    <td><strong>Plugin Name</strong></td>                                    <td class="max_plugin_name_td">                                        <select name="plugin_name" required class="max_plugin_name">                                            <option>Select Plugin</option>                                            <?php foreach ($all_plugins as $single) {?>                                                <option value="<?php echo $single->id; ?>" <?php if($_POST['plugin_id'] == $single->id) echo 'selected';?>><?php echo $single->plugin_name; ?></option>                                            <?php }?>                                        </select>                                    </td>                                </tr>                                <tr>                                    <td><strong>Domain / Website</strong></td>                                    <td>                                        <input type="text" required placeholder="Name" name="site_name">                                    </td>                                </tr>                                <tr>                                    <td><strong>License Key</strong></td>                                    <td>                                        <input type="text" required placeholder="Key" class="max_license_key_input" name="license_key">                                        <button class="max_add_random">Generate</button>                                    </td>                                </tr>                                <tr>                                    <td><strong>License Type</strong></td>                                    <td>                                        <select name="license_type" required class="max_license_type">                                            <option>Select Type</option>                                            <option value="monthly">Monthly</option>                                            <option value="yearly">Yearly</option>                                            <option value="custom">Custom</option>                                        </select>                                    </td>                                </tr>                                <tr>                                    <td><strong>Expiry Date</strong></td>                                    <td>                                        <input type="date" required name="expiry_date" class="max_expiry_date">                                    </td>                                </tr>                            </tbody>                        </table>                    </div>                </div>                <div class="max_modal_footer">                    <input class="max_modal_submit" type="submit" value="Add" />                    <button class="max_modal_close" type="button">Close</button>                </div>            </form>            <?php        }        if($type == 'update'){            $table_name     = $wpdb->prefix."max_license_details";            $last_insertion = $wpdb->get_row( $wpdb->prepare( 'SELECT * FROM '.$table_name.' WHERE id ='.$id ) );            ?>            <form class="custom-table" action="<?php echo admin_url('admin-post.php'); ?>" method="post" enctype="multipart/form-data">                <div class="max_modal_header">                    <h3>Update License</h3>                </div>                <div class="max_modal_content">                    <div class="custom-table" action="<?php echo admin_url('admin-post.php'); ?>" method="post">                        <input type="hidden" value="max_add_new_license" name="action">                        <input type="hidden" value="2" name="insertion_type">                        <input type="hidden" value="<?php echo $id; ?>" name="id">                        <?php wp_nonce_field('max_add_license_details'); ?>                        <table>                            <tbody>                                <tr>                                    <td><strong>Plugin Name</strong></td>                                    <td class="max_plugin_name_td">                                        <select name="plugin_name" required class="max_plugin_name">                                            <option>Select Plugin</option>                                            <?php foreach ($all_plugins as $single) {?>                                                <option value="<?php echo $single->id; ?>" <?php if($last_insertion->plugin_id == $single->id) echo 'selected';?> ><?php echo $single->plugin_name; ?></option>                                            <?php }?>                                        </select>                                    </td>                                </tr>                                <tr>                                    <td><strong>Domain / Website</strong></td>                                    <td>                                        <input type="text" required placeholder="Name" value="<?php echo $last_insertion->site_name?>" name="site_name">                                    </td>                                </tr>                                <tr>                                    <td><strong>License Key</strong></td>                                    <td>                                        <input type="text" required placeholder="Key" value="<?php echo $last_insertion->license_key?>"  name="license_key">                                    </td>                                </tr>                                <tr>                                    <td><strong>License Type</strong></td>                                    <td>                                        <select name="license_type" required class="max_license_type">                                            <option>Select Type</option>                                            <option value="monthly" <?php echo ($last_insertion->license_type == 'monthly') ? 'selected' : '' ;?>>Monthly</option>                                            <option value="yearly" <?php echo ($last_insertion->license_type == 'yearly') ? 'selected' : '' ;?>>Yearly</option>                                            <option value="custom" <?php echo ($last_insertion->license_type == 'custom') ? 'selected' : '' ;?>>Custom</option>                                        </select>                                    </td>                                </tr>                                <tr>                                    <td><strong>Expiry Date</strong></td>                                    <td>                                        <input type="date" required name="expiry_date" class="max_expiry_date" value="<?php echo $last_insertion->expiry_date?>">                                    </td>                                </tr>                                <tr>                                    <td><strong>Status</strong></td>                                    <td>                                        <select name="plugin_status" required>                                            <option value="active" <?php echo ($last_insertion->status == 'active') ? 'selected' : ''; ?>>Active</option>                                            <option value="in-active" <?php echo ($last_insertion->status == 'in-active') ? 'selected' : ''; ?>>Inactive</option>                                        </select>                                    </td>                                </tr>                            </tbody>                        </table>                    </div>                </div>                <div class="max_modal_footer">                    <input class="max_modal_submit" type="submit" value="Update" />                    <button class="max_modal_close" type="button">Close</button>                </div>            </form>            <?php        }        die();    }    /**     * delete plugin files ajax and its data including licenses     *     */    public function max_delete_plugin_zips(){        global $wpdb;        $id = $_POST['id'];        $table_name     = $wpdb->prefix."max_plugin_details";        $table_name1    = $wpdb->prefix."max_license_details";        $last_insertion = $wpdb->get_row( $wpdb->prepare( 'SELECT * FROM '.$table_name ) );        $delete_file = plugin_dir_path( dirname( __FILE__ ) ).'plugin_files/'.$last_insertion->slug.'-'.$last_insertion->version.'.zip';//        if(unlink($delete_file)) {            unlink($delete_file);            $wpdb->get_row($wpdb->prepare('DELETE FROM ' . $table_name . ' WHERE id = ' . $id));            $wpdb->get_row($wpdb->prepare('DELETE FROM ' . $table_name1 . ' WHERE plugin_id = ' . $id));            update_option('max_result_notice', 'deleted');            echo 200;//        }//        else{//            echo 201;//        }        die();    }    /**     * delete plugin licenses ajax     *     */    public function max_delete_plugin_licenses(){        global $wpdb;        $id = $_POST['id'];        $table_name    = $wpdb->prefix."max_license_details";        $wpdb->get_row('DELETE FROM ' . $table_name . ' WHERE     id = ' . $id);        echo 200;        die();    }    /**     * update editor role capacities     *     */    public function max_edit_user_role_capacities(){        $editor = get_role('editor');        $editor->remove_cap('edit_themes');        $editor->remove_cap('edit_plugins');    }    /**     * remove save option for notices     *     */    public function max_remove_notice_from_options(){        update_option('max_result_notice', '');        echo 200;        exit;    }    /**     * verify upload plugin license     *     */    public function max_verify_license_keys_function() {        register_rest_route( 'max_verify_licenses/v1',   '/license_verify/', array(            'methods' => 'GET',            'callback' => array($this, 'max_verify_license_keys_callback'),        ) );    }    /**     * verify upload plugin license callback function     *     */    public function max_verify_license_keys_callback( WP_REST_Request $request ) {        global $wpdb;        $response = array();        $site_name = $request['site_name'];        $plugin_name = $request['plugin_name'];        $license_key = $request['license_key'];        $table_name = $wpdb->prefix."max_plugin_details";        $last_insertion = $wpdb->get_row($wpdb->prepare('SELECT * FROM ' . $table_name . ' WHERE slug = "' .$plugin_name. '"'));        if($last_insertion !== FALSE && !empty($last_insertion)){            $table_name = $wpdb->prefix."max_license_details";            $last_insertion = $wpdb->get_row($wpdb->prepare('SELECT * FROM ' . $table_name . ' WHERE site_name = "' .$site_name. '" AND license_key = "' .$license_key. '"'));            if ($last_insertion !== FALSE && !empty($last_insertion)) {                if($last_insertion->expiry_date >= date("Y-m-d")){                    $response['expiry_date'] = $last_insertion->expiry_date;                    $response['license_type'] = $last_insertion->license_type;                    $response['code'] = 200;                    $response['msg'] = 'License key verified successfully';                    $response['expiry_msg'] = 'Expired license key please renew your license';                }else{                    $response['code'] = 201;                    $response['msg'] = 'Expired license key please renew your license';                }            }else{                $response['code'] = 202;                $response['msg'] = 'Invalid license key please try again with a valid key';            }        }else{            $response['code'] = 203;            $response['msg'] = 'Licensing not available';        }        return $response;    }    /**     * get plugin meta data     *     */    public function max_get_plugin_metadata() {        register_rest_route( 'max_verify_licenses/v1',   '/get_plugin_metadata/', array(            'methods' => 'GET',            'callback' => array($this, 'max_get_plugin_metadata_callback'),        ) );    }    /**     * get plugin meta data license callback function     *     */    public function max_get_plugin_metadata_callback( WP_REST_Request $request ) {        global $wpdb;        $response   = array();        $slug       = $request['slug'];        $metadata   = $request['get_plugin_metadata'];        $table_name = $wpdb->prefix."max_plugin_details";        $last_insertion = $wpdb->get_row($wpdb->prepare('SELECT * FROM ' . $table_name . ' WHERE slug = "' .$slug. '"'));        if ($last_insertion !== FALSE && !empty($last_insertion)) {            $file = $last_insertion->plugin_zip;            if (file_exists($file)) {                $last_updated = date ("Y-m-d  H:i:s", filemtime($file));            }            $response['name'] = $last_insertion->plugin_name;            $response['version'] = $last_insertion->version;            $response['homepage'] = 'maxenius.com';            $response['author'] = 'Maxenius Solutions';            $response['author_homepage'] = 'maxenius.com';            $response['last_updated'] = $last_updated;            $response['slug'] = $last_insertion->slug;            $response['download_url'] = $file;            $response['request_time_elapsed'] = '0.000';            return $response;        }    }    /**     * manage admin menu w.r.t user role     *     */    public function max_manager_menu_with_user_role() {        add_role(            'plugin_manager', //  System name of the role.            __( 'Plugin Manager'  ), // Display name of the role.            array(                'read'  => true,                'delete_posts'  => false,                'delete_pages' => false,                'delete_published_posts' => false,                'edit_posts'   => false,                'edit_pages'  => false,                'publish_posts' => false,                'upload_files'  => false,                'edit_published_pages'  =>  true,                'publish_pages'  => false,                'edit_others_pages' => true,                'list_users' => true,                'remove_users' => true,                'add_users' => true,                'create_users' => true,                'edit_users' => true,                'promote_users' => true,            )        );        add_role(            'license_key_maintainer', //  System name of the role.            __( 'License Key Maintainer'  ), // Display name of the role.            array(                'read'  => true,                'delete_posts'  => false,                'delete_pages' => false,                'delete_published_posts' => false,                'edit_posts'   => false,                'edit_pages'  => false,                'publish_posts' => false,                'upload_files'  => false,                'edit_published_pages'  =>  true,                'publish_pages'  => false,                'edit_others_pages' => true,                'list_users' => false,                'remove_users' => false,                'add_users' => false,                'create_users' => false,                'edit_users' => false,                'promote_users' => false,            )        );    }    /**     * manage users menu w.r.t user role     *     */    public function max_hide_users_with_roles($query) {        $user = wp_get_current_user();        if ( in_array( 'plugin_manager', (array) $user->roles ) ) {            $query->set('role__in', array('license_key_maintainer', 'plugin_manager'));            $query->set('role', '');        }    }    /**     * filter user role     *     */    function max_edit_user_roles( $editable_roles )    {        $user = wp_get_current_user();        $new_array = [];        if ( in_array( 'plugin_manager', (array) $user->roles ) ) {            $my_roles = array('license_key_maintainer', 'plugin_manager');            foreach ($editable_roles as $k => $role) {                if (in_array($k, $my_roles)) {                    $new_array[] = $role;                }            }        }else{            $new_array = $editable_roles;        }        return $new_array;    }}